pub enum Род {
    Муж,
    Жен,
    Сред,
}

// Существительное
pub struct Сущ {
    pub род: Род,
    pub текст: &'static str,
}

pub struct ПрошлыйГлагол {
    pub муж: &'static str,
    pub жен: &'static str,
    pub сред: &'static str,
}

impl ПрошлыйГлагол {
    pub fn отобразить(&self, род: &Род) -> &str {
        match род {
            Род::Муж => self.муж,
            Род::Жен => self.жен,
            Род::Сред => self.сред,
        }
    }
}

pub const ГЛАГОЛ_ОЖИДАЛСЯ: ПрошлыйГлагол = ПрошлыйГлагол {
    муж: "ожидался",
    жен: "ожидалась",
    сред: "ожидалось",
};

pub const ГЛАГОЛ_ПОВСТРЕЧАЛСЯ: ПрошлыйГлагол = ПрошлыйГлагол {
    муж: "повстречался",
    жен: "повстречалася",
    сред: "повстречалось",
};

pub const _ГЛАГОЛ_НАЙДЕН: ПрошлыйГлагол = ПрошлыйГлагол {
    муж: "найден",
    жен: "найдена",
    сред: "найдено",
};
