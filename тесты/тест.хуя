вкл прелюдия;

про тест_передачи_аргументов_функции(а: нат, б: нат) то
    печать(«Передача аргументов функции: », а + б, «\н»);

про тест_порядка_передачи_аргументов_функции(а: нат, б: нат, в: нат, г: нат) то
    печать(«Порядок передачи аргументов функции: », а, « », б, « », в, « », г, « », «\н»);

про тест_возврата_значения(а: нат, б: нат, в: нат): нат то
    вернуть а + б*в;

про тест_вещественных_чисел() нч
    печать(«Вещественная арифметика: », (17.0*2.0 + 35.0) как нат, «\н»);
    печать(«Вещественное отрицание: », -69.0 -? 0.0, «\н»);
    печать(«Вещественная сравнение: », 69.0 -? 420.0, « », 69.0 +? 420.0, «\н»);
кц

про баг_при_выделении_локальной_переменной_в_цикле_для() то // некорректно обозначались области видимости
    для _ := 1..3 то пер а: нат;

про вернуть_массив(): массив(10, нат) нч
    пер результат: массив(10, нат);
    результат(0) := 69нат;
    вернуть результат;
кц

про печать_отрицательных_чисел(число: цел) нч
    печать(«Печать отрицательных чисел: », число, «\н»);
кц

про логическое_и() нч
    печать(«логическое и:\н»);
    печать(«    ложь и ложь == », ложь и ложь, «\н»);
    печать(«    истина и ложь == », истина и ложь, «\н»);
    печать(«    ложь и истина == », ложь и истина, «\н»);
    печать(«    истина и истина == », истина и истина, «\н»);
кц

про взаимодействие_лапок_и_ёлочек() нч
    печать(«Взаимодействие «ёлочек» и "лапок"\н»);
    печать(«    », «""», «\н»);
    печать(«    », "«»", «\н»);
кц

про чтение_нат8() нч
    пер ы : строка := «Q»;
    печать(«Чтение нат8: », ы(0) как нат, «\н»);
кц

про печать_человекочитаемого_числа(число: цел) нч
    печать(«    »);
    вилка число нч
    когда 0     то печать(«ноль\н»);
    когда 1     то печать(«один\н»);
    когда 2     то печать(«два\н»);
    когда любое то печать(«много\н»);
    кц
кц

про проверить_вилку() нч
    печать(«Проверка вилки:\н»);
    печать_человекочитаемого_числа(0);
    печать_человекочитаемого_числа(1);
    печать_человекочитаемого_числа(2);
    печать_человекочитаемого_числа(3);
    печать_человекочитаемого_числа(69);
кц

конст ОБЪЁМ_ПОЗИЦИЙ := 10;

структ Вектор2 нч
    икс: вещ;
    игрек: вещ;
кц

про печать_вектор2(поз: Вектор2) нч
    печать(«(», поз.икс как цел, «, », поз.игрек как цел, «)»);
кц

структ Позиции нч
    позиции: массив(ОБЪЁМ_ПОЗИЦИЙ, Вектор2);
кц

про индексация_массивов_вложенных_в_структуру() нч
    пер позиции: Позиции;

    для индекс := 1..ОБЪЁМ_ПОЗИЦИЙ нч
        позиции.позиции(индекс - 1).икс   := индекс как вещ;
        позиции.позиции(индекс - 1).игрек := индекс как вещ;
    кц

    печать(«Индексация массивов вложенных в структуру:\н»);
    для индекс := 1..ОБЪЁМ_ПОЗИЦИЙ нч
        печать(«    »);
        печать_вектор2(позиции.позиции(индекс - 1));
        печать(«\н»);
    кц
кц

про итерация_строки_по_байтам(сообщение: строка) нч
    печать("Итерация строки «",сообщение,"» по байтам: \н");
    для индекс := 1..размер(сообщение) нч
        печать(«    », сообщение(индекс-1) как нат64, «\н»);
    кц
кц

про тест_подбрить_строку_слева(сообщение: строка) то
    печать("подбрить_строку_слева(«",сообщение,"») = «", подбрить_строку_слева(сообщение), "»\н");

структ Человек нч
    имя: строка;
кц

про индексация_срезов_внутри_структуры() нч
    пер человек: Человек;
    человек.имя := «alexey»;
    для индекс := 1..размер(человек.имя) нч
        человек.имя(индекс-1) := верхний_регистр_аскии(человек.имя(индекс-1));
    кц
    печать(«Индексация срезов внутри структуры: », человек.имя, «\н»);
кц

структ Какая_То_Структура нч
    число: цел;
    еще_число: цел;
кц

про печать_какой_то_структуры(структура: Какая_То_Структура) нч
    печать(«(число: », структура.число, «, еще_число: », структура.еще_число, «)»);
кц

про сравнить_какие_то_структуры(одна: Какая_То_Структура, вторая: Какая_То_Структура) нч
    печать(«    »);
    печать_какой_то_структуры(одна);
    печать(« = »);
    печать_какой_то_структуры(вторая);
    печать(« => »);
    печать(одна = вторая, «\н»);
кц

про сравнение_структур() нч
    пер одна: Какая_То_Структура;
    одна.число := 69;
    одна.еще_число := 420;

    пер вторая: Какая_То_Структура;
    вторая.число := 69;
    вторая.еще_число := 420;

    печать(«Сравнение структур:\н»);
    сравнить_какие_то_структуры(одна, вторая);

    вторая.еще_число := 1337;
    сравнить_какие_то_структуры(одна, вторая);
кц

про тест_строки_равны(одна: строка, другая: строка) то
    печать("    «",одна,"» = «",другая,"» => ",строки_равны(одна, другая),«\н»);

про сравнение_строк() нч
    печать(«Сравнение строк:\н»);
    тест_строки_равны(«Hello», «World»);
    тест_строки_равны(«Foo», «Foo»);
кц

про проверить_логические_конвертации() нч
    печать(«Проверить логические конвертации:\н»);
    печать(«    », 0 как лог, «\н»);
    печать(«    », 1 как лог, «\н»);
    печать(«    », -1 как лог, «\н»);
    печать(«    », 69 как лог, «\н»);
    печать(«    », 69 как лог как цел, «\н»);
кц

про вернуть_строку(): строка то вернуть «E»;

про индексация_срезов_слева_и_справа() нч
    пер имя: строка := «alexey»;
    для индекс := 1..размер(имя) нч
        имя(индекс-1) := верхний_регистр_аскии(имя(индекс-1));
    кц
    печать(«Индексация срезов слева и справа: », имя, «\н»);
кц

про главная() нч
    печать(«Печать чисел: », 0, «, », 69, «, », 1234567890, «\н»);
    печать(«Печать логических: », 69 = 69, «, », 69 = 420, «\н»);
    тест_передачи_аргументов_функции(34нат, 35нат);
    тест_порядка_передачи_аргументов_функции(1нат, 2нат, 3нат, 4нат);
    печать(«Тест возврата значения: », тест_возврата_значения(35нат, 17нат, 2нат), «\н»);
    тест_вещественных_чисел();
    баг_при_выделении_локальной_переменной_в_цикле_для();
    печать(«Индексация сложных выражений: », вернуть_массив()(0), «\н»);
    печать_отрицательных_чисел(-69);
    логическое_и();
    взаимодействие_лапок_и_ёлочек();
    чтение_нат8();
    проверить_вилку();
    индексация_массивов_вложенных_в_структуру();
    итерация_строки_по_байтам(«Hello, World»);
    тест_подбрить_строку_слева(«    Привет    »);
    тест_подбрить_строку_слева(«   »);
    тест_подбрить_строку_слева(«»);
    индексация_срезов_внутри_структуры();
    сравнение_структур();
    сравнение_строк();
    проверить_логические_конвертации();
    печать(«Индексирование срезу из процедуры: », вернуть_строку()(0) как нат, «\н»);
    индексация_срезов_слева_и_справа();
    печать(«Отрицательный остаток: », (-1) ост 100, «\н»);
    печать(«Отрицательное деление: », (-1) / 100, «\н»);
    печать(«Отрицательное умножение: », (-1) * 100, «\н»);
    печать(«Знаковое деление: », (800.0 / 20.0) как цел, «\н»);
кц
